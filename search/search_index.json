{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"About Me \ud83d\ude0e I am an Electrical Engineering student at the University of California San Diego \ud83d\udd31. My passion is the field of EECS, particularly the intersection of Machine Learning \ud83e\udde0, Autonomous Vehicle \ud83d\ude97, & Robotics \ud83e\udd16. Linked GitHub Projects \ud83d\udee0 AUTONOMOUS RC CAR \ud83d\ude97 An RC Car, powered by Jetson Nano and a custom ROS package, capable of driving autnomously, keeping itself on track and change lanes when needed. \ud83d\udc49 Read More GAME CONTROLLER \ud83c\udfae A game controller made with ESP32, accelerometer, OLED display, and more. It's capable of playing both Space Invader and Mine Sweeper game. \ud83d\udc49 Read More SMART WEARABLE \u231a This wearable has multiple features, such as measuring heart rate and steps count, retrieving real-time weather forecast, and showing time & date. \ud83d\udc49 Read More Navigating in this website \ud83d\uddfa Blog - Where I will post (well hopefully) tech-related stuffs like guides, academics, etc. Notes - Hopefully no more writing on papers. You can use my notes freely, and I hope they're useful! Projects - Seriously, take a look at them. Press / key to search for anything and everything in the entire website.","title":"Home"},{"location":"#about-me","text":"I am an Electrical Engineering student at the University of California San Diego \ud83d\udd31. My passion is the field of EECS, particularly the intersection of Machine Learning \ud83e\udde0, Autonomous Vehicle \ud83d\ude97, & Robotics \ud83e\udd16. Linked GitHub","title":"About Me \ud83d\ude0e"},{"location":"#projects","text":"AUTONOMOUS RC CAR \ud83d\ude97 An RC Car, powered by Jetson Nano and a custom ROS package, capable of driving autnomously, keeping itself on track and change lanes when needed. \ud83d\udc49 Read More GAME CONTROLLER \ud83c\udfae A game controller made with ESP32, accelerometer, OLED display, and more. It's capable of playing both Space Invader and Mine Sweeper game. \ud83d\udc49 Read More SMART WEARABLE \u231a This wearable has multiple features, such as measuring heart rate and steps count, retrieving real-time weather forecast, and showing time & date. \ud83d\udc49 Read More","title":"Projects \ud83d\udee0"},{"location":"#navigating-in-this-website","text":"Blog - Where I will post (well hopefully) tech-related stuffs like guides, academics, etc. Notes - Hopefully no more writing on papers. You can use my notes freely, and I hope they're useful! Projects - Seriously, take a look at them. Press / key to search for anything and everything in the entire website.","title":"Navigating in this website  \ud83d\uddfa"},{"location":"Projects/AutonomousRCCar/","text":"Self-Driving RC Car Powered by JETSON NANO \ud83d\udc51 Featured on NVIDIA community Jetson Projects page \ud83d\udc51 Documentation \ud83d\udcd1 Mjolnir Kit - GitHub So..what is this? \ud83e\udd14 Meet Harold , an RC Car, capable of driving autonomously whilst maintaining itself on the track, and switch lanes when needed. Harold \ud83d\ude97 Harold driving 3 laps in a challenging curvy track, like a boss \ud83d\ude0e Features \ud83c\udf1f Info This is just a very brief write-up of the project. The full, detailed, documentation can be found here Uses a custom ROS Package which utilizes OpenCV , we call it Mjolnir Kit , allowing it to detect lines and lanes , to stay on the track and to switch lanes when needed. \ud83d\udc49 GitHub The brain of the car is the powerful Jetson NANO . It also features a PID Controller App , which allows user to tune the PID of the car , live while it's driving. This is achieved via MQTT protocol and a PID Controller class . A custom PCB board for power distribution and an LED board to add aesthetics to our car. a sneak peek of the Mjolnir Kit Official Documentation \ud83d\udcd1 The official documentation is currently hosted here , though I am considering to document it on this project page too. So, stay tuned! Meet Harold's Engineers \ud83d\udc6c\ud83d\udc6c From left: @George Troulis (Computer Engineering), @Arthur Dassier (Computer Science), @Myself (Electrical Engineering), @Dev Gulati (Mechanical Engineering) For full, detailed, documentation, consult our documentation page here .","title":"Autonomous RC Car   \ud83d\ude97"},{"location":"Projects/AutonomousRCCar/#self-driving-rc-car-powered-by-jetson-nano","text":"","title":"Self-Driving RC Car Powered by JETSON NANO"},{"location":"Projects/AutonomousRCCar/#featured-on-nvidia-community-jetson-projects-page","text":"Documentation \ud83d\udcd1 Mjolnir Kit - GitHub","title":"\ud83d\udc51  Featured on NVIDIA community Jetson Projects page  \ud83d\udc51"},{"location":"Projects/AutonomousRCCar/#sowhat-is-this","text":"Meet Harold , an RC Car, capable of driving autonomously whilst maintaining itself on the track, and switch lanes when needed. Harold \ud83d\ude97 Harold driving 3 laps in a challenging curvy track, like a boss \ud83d\ude0e","title":"So..what is this? \ud83e\udd14"},{"location":"Projects/AutonomousRCCar/#features","text":"Info This is just a very brief write-up of the project. The full, detailed, documentation can be found here Uses a custom ROS Package which utilizes OpenCV , we call it Mjolnir Kit , allowing it to detect lines and lanes , to stay on the track and to switch lanes when needed. \ud83d\udc49 GitHub The brain of the car is the powerful Jetson NANO . It also features a PID Controller App , which allows user to tune the PID of the car , live while it's driving. This is achieved via MQTT protocol and a PID Controller class . A custom PCB board for power distribution and an LED board to add aesthetics to our car. a sneak peek of the Mjolnir Kit","title":"Features   \ud83c\udf1f"},{"location":"Projects/AutonomousRCCar/#official-documentation","text":"The official documentation is currently hosted here , though I am considering to document it on this project page too. So, stay tuned!","title":"Official Documentation   \ud83d\udcd1"},{"location":"Projects/AutonomousRCCar/#meet-harolds-engineers","text":"From left: @George Troulis (Computer Engineering), @Arthur Dassier (Computer Science), @Myself (Electrical Engineering), @Dev Gulati (Mechanical Engineering) For full, detailed, documentation, consult our documentation page here .","title":"Meet Harold's Engineers   \ud83d\udc6c\ud83d\udc6c"},{"location":"Projects/GameController/","text":"Game Controller that plays Space Invader and Mine Sweeper GitHub So..what is this? \ud83e\udd14 I made an immersive Bluetooth-enabled Game Contoller that can play both MineSweeper and Space Invader using ESP32, accelerometer, and a bunch of other electronics. The controller (note: i plan to 3D printed the case in the near future) Gameplay demo, Space Invader \ud83d\udc7e My teammate, Justin, playing the Jumping Jacks Mode Features \ud83c\udf1f Info This is just a very brief write-up of the project. The full, detailed, documentation can be found here Uses ESP32 and accelerometer to detect player's movements and reactions . Live game statistics display on the OLED and vibrations when the player gets hit. An immersive Bluetooth-enabled Game Controller that can play both MineSweeper \ud83d\udca3 and Space Invader \ud83d\udc7e . A \"Jumping Jacks Mode\" for the MineSweeper game, where a player is required to perform a number of jumping jacks in order to choose a particular tile. Detection of this jumping jack is achieved via Digital Signal Processing on the Acceleromter Data , particularly Moving Average Filter and Detrending . Simultaneous firing and movement via a push of a button. Demo videos: Space Invader \ud83d\udc7e | Mine Sweeper \ud83d\udca3 Official Documentation \ud83d\udcd1 The official documentation is currently hosted on GitHub , though I am considering to document it on this project page too. So, stay tuned! For full, detailed, documentation, consult the project's GitHub Repository","title":"Game Controller   \ud83c\udfae"},{"location":"Projects/GameController/#game-controller-that-plays-space-invader-and-mine-sweeper","text":"GitHub","title":"Game Controller that plays Space Invader    and Mine Sweeper   "},{"location":"Projects/GameController/#sowhat-is-this","text":"I made an immersive Bluetooth-enabled Game Contoller that can play both MineSweeper and Space Invader using ESP32, accelerometer, and a bunch of other electronics. The controller (note: i plan to 3D printed the case in the near future) Gameplay demo, Space Invader \ud83d\udc7e My teammate, Justin, playing the Jumping Jacks Mode","title":"So..what is this? \ud83e\udd14"},{"location":"Projects/GameController/#features","text":"Info This is just a very brief write-up of the project. The full, detailed, documentation can be found here Uses ESP32 and accelerometer to detect player's movements and reactions . Live game statistics display on the OLED and vibrations when the player gets hit. An immersive Bluetooth-enabled Game Controller that can play both MineSweeper \ud83d\udca3 and Space Invader \ud83d\udc7e . A \"Jumping Jacks Mode\" for the MineSweeper game, where a player is required to perform a number of jumping jacks in order to choose a particular tile. Detection of this jumping jack is achieved via Digital Signal Processing on the Acceleromter Data , particularly Moving Average Filter and Detrending . Simultaneous firing and movement via a push of a button. Demo videos: Space Invader \ud83d\udc7e | Mine Sweeper \ud83d\udca3","title":"Features   \ud83c\udf1f"},{"location":"Projects/GameController/#official-documentation","text":"The official documentation is currently hosted on GitHub , though I am considering to document it on this project page too. So, stay tuned! For full, detailed, documentation, consult the project's GitHub Repository","title":"Official Documentation   \ud83d\udcd1"},{"location":"Projects/SmartWearable/","text":"Smart Wearable That Measures Heart Rate \ud83d\udc93, Displays Weather Forecast \u2614, Counts Steps \ud83d\udeb6, and Time & Date \ud83d\udd51 So..what is this? \ud83e\udd14 I made a wearable watch that can measure your heart rate, displays weather forecast, measures steps count, and shows time & date. It uses an ESP32 , Photodetector , Accelerometer , and an OLED Display . Yeah, you probably seen this before here , but yes it is both a a smart wearable and a game controller \ud83d\ude0e maybe I should make it look like an actual watch \ud83e\udd14 Collecting and training heart beat data via Gaussian Mixture Training \ud83e\udde0 The wearable in action, measuring my heart rate, and displaying all other features Features \ud83c\udf1f Measures live heart rate through data collected by photodetector . Digital Signal Processing is then applied on this data to be trained via Gaussian Mixture Training (GMM) , and validated with Leave-One-Subject-Out-Validation (LOSOV) method . Measures steps count via applying Digital Signal Processing on Accelerometer data . Provides Live Weather Forecast and Time & Date display , achieved through OpenWeather Map API .","title":"Smart Wearable   \u231a"},{"location":"Projects/SmartWearable/#smart-wearable-that-measures-heart-rate-displays-weather-forecast-counts-steps-and-time-date","text":"","title":"Smart Wearable That Measures Heart Rate   \ud83d\udc93, Displays Weather Forecast   \u2614, Counts Steps   \ud83d\udeb6, and Time &amp; Date   \ud83d\udd51"},{"location":"Projects/SmartWearable/#sowhat-is-this","text":"I made a wearable watch that can measure your heart rate, displays weather forecast, measures steps count, and shows time & date. It uses an ESP32 , Photodetector , Accelerometer , and an OLED Display . Yeah, you probably seen this before here , but yes it is both a a smart wearable and a game controller \ud83d\ude0e maybe I should make it look like an actual watch \ud83e\udd14 Collecting and training heart beat data via Gaussian Mixture Training \ud83e\udde0 The wearable in action, measuring my heart rate, and displaying all other features","title":"So..what is this? \ud83e\udd14"},{"location":"Projects/SmartWearable/#features","text":"Measures live heart rate through data collected by photodetector . Digital Signal Processing is then applied on this data to be trained via Gaussian Mixture Training (GMM) , and validated with Leave-One-Subject-Out-Validation (LOSOV) method . Measures steps count via applying Digital Signal Processing on Accelerometer data . Provides Live Weather Forecast and Time & Date display , achieved through OpenWeather Map API .","title":"Features   \ud83c\udf1f"}]}